//
//  ViewController.swift
//  LittleWelcomeApp
//
//  Created by Anton Saltykov on 12.08.2022.
//

import UIKit

final class LoginViewController: UIViewController {

    // MARK: - IBOutlet
    @IBOutlet var userNameTF: UITextField!
    @IBOutlet var passwordTF: UITextField!

    // MARK: - Private Properties
    private let correctUserName = "User"
    private let correctPassword = "Password"

    // MARK: - Override Methods
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        guard let welcomeVC = segue.destination as? WelcomeViewController else { return }

        welcomeVC.welcomeText = userNameTF.text
    }

    override func shouldPerformSegue(withIdentifier identifier: String, sender: Any?) -> Bool {
        if identifier == "authSegue" {
            guard checkEmptyUserNameTF() else { return false }
            guard checkEmptyPasswordTF() else { return false }
            guard checkAuthCorrect() else { return false }
        }
        return true
    }

    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        super .touchesBegan(touches, with: event)
        self.view.endEditing(true)
    }

    // MARK: - IBAction
    @IBAction func remindUserName() {
        showAlert(with: "Ooops", and: "Your User Name is \(correctUserName) ü§ê")
    }

    @IBAction func remindPassword() {
        showAlert(with: "Ooops", and: "Your Password is \(correctPassword) ü´£")
    }

    @IBAction func unwindSegue(_ segue: UIStoryboardSegue) {
        userNameTF.text = ""
        passwordTF.text = ""
    }

    // MARK: - Private Methods
    private func checkEmptyUserNameTF() -> Bool {
        guard let userName = userNameTF.text, !userName.isEmpty else {
            showAlert(
                with: "–ù–µ–∞...",
                and: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å–ø–æ–º–Ω–∏—Ç–µ –∫–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç –∏ –≤–≤–µ–¥–∏—Ç–µ User Name",
                andFocusAfter: userNameTF
            )
            return false
        }
        return true
    }

    private func checkEmptyPasswordTF() -> Bool {
        guard let password = passwordTF.text, !password.isEmpty else {
            showAlert(
                with: "–ù–µ–∞...",
                and: """
–í —Ü–µ–ª—è—Ö –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–≤–æ–¥ –ø—É—Å—Ç–æ–≥–æ –ø–∞—Ä–æ–ª—è –Ω–µ –¥–æ–ø—É—Å—Ç–∏–º!
–í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π —Å –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–∞—Ä–æ–ª—è –Ω–∞–∂–∏–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "Forgot Password"
–ù–∏–∫–æ–º—É –Ω–µ —Å–æ–æ–±—â–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—ã–π —É–≤–∏–¥–∏—Ç–µ, –∫–∞–∫ –±—ã —Å–∏–ª—å–Ω–æ –Ω–µ —Ö–æ—Ç–µ–ª–æ—Å—å! –≠—Ç–æ –∫—Ä–∞–π–Ω–µ —Å–µ–∫—Ä–µ—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
""",
                andFocusAfter: passwordTF
            )
            return false
        }
        return true
    }

    private func checkAuthCorrect() -> Bool {
        guard userNameTF.text == correctUserName && passwordTF.text == correctPassword else {
            showAlert(
                with: "–ù–µ –ø—É—â—É!!!",
                and: "–ò –Ω–µ —É–≥–æ–≤–∞—Ä–∏–≤–∞–π. –õ—É—á—à–µ –ø—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å....",
                andFocusAfter: passwordTF
            )
            return false
        }
        return true
    }
    

}

// MARK: - Extensions
extension LoginViewController {
    private func showAlert(with title: String, and message: String, andFocusAfter: UITextField? = nil) {
        let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)
        let closeAction = UIAlertAction(title: "Ok", style: .default) { _ in
            self.passwordTF.text = ""
            if let focusTFAfter = andFocusAfter {
                focusTFAfter.becomeFirstResponder()
            }
        }

        alert.addAction(closeAction)
        present(alert, animated: true)
    }
}

